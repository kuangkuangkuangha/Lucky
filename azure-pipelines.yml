# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  containerName: 'lucky'
  buildMsg: "[lucky] Image build completed."
  runMsg: "[lucky] Container get up and running."

stages:
- stage: Build
  displayName: Build image and push
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: $(imageName)
        tags: |
          $(tag)
    - script: echo $(QQGROUP)
    - script: echo $(QQBOTURL)
    - script: 'curl -X POST -H ''Content-Type: application/json'' -d ''{"ToUserUid": $(QQGROUP), "SendToType": 2, "SendMsgType": "TextMsg", "Content": "$(buildMsg)"}'' $(QQBOTURL)'
- stage: Deploy
  displayName: Pull image and run
  jobs:
  - deployment: VMDeploy
    displayName: Deploy to VM
    environment:
      name: token-tencent
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - script: if [[ -n $(docker ps -a | grep $(CONTAINERNAME)) ]]; then docker stop $(CONTAINERNAME) && docker rm $(CONTAINERNAME); fi
          - script: docker pull $(IMAGENAME):$(TAG)
          - script: docker run -itd -p $(PORT):80 --name $(CONTAINERNAME) $(IMAGENAME):$(TAG)

